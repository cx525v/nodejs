var sinon = require('sinon')
  , EventEmitter = require('events').EventEmitter;

describe('EventEmitter', function() {
  describe('#emit()', function() {
    it('should invoke the callback', function() {
      var spy = sinon.spy()
        , emitter = new EventEmitter();

      emitter.on('foo', spy);
      emitter.emit('foo');
      spy.called.should.equal.true;
    })

    it('should pass arguments to the callbacks', function() {
      var spy = sinon.spy()
        , emitter = new EventEmitter();

      emitter.on('foo', spy);
      emitter.emit('foo', 'bar', 'baz');
      sinon.assert.calledOnce(spy);
      sinon.assert.calledWith(spy, 'bar', 'baz');
    })
  })
})


describe('EventEmitter', function() {
  describe('#emit()', function() {
    it('should invoke the callback', function(done) {
      var emitter = new EventEmitter();
      emitter.on('foo', done);
      emitter.emit('foo');
    })

    it('should pass arguments to the callbacks', function(done) {
      var emitter = new EventEmitter();

      emitter.on('foo', function(a, b) {
        a.should.equal('bar');
        b.should.equal('baz');
        done();
      });

      emitter.emit('foo', 'bar', 'baz');
    })
  })
})
